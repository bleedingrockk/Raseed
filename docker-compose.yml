version: '3.8'

services:
  flask-app:
    build: .
    container_name: flask-google-auth-app
    ports:
      - "5000:${PORT:-8080}" 
    environment:
      - FLASK_ENV=development
      - OAUTHLIB_INSECURE_TRANSPORT=1
      - SECRET_KEY=your-secret-key-change-in-production
      - PORT=5000  # Set PORT for local development
    volumes:
      - ./uploads:/app/uploads
      - ./client_secret.json:/app/client_secret.json:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/test-config"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Production-like testing service (mimics Cloud Run behavior)
  flask-app-prod:
    build: .
    container_name: flask-google-auth-app-prod
    ports:
      - "8080:8080"
    environment:
      - FLASK_ENV=production
      - OAUTHLIB_INSECURE_TRANSPORT=1
      - SECRET_KEY=your-secret-key-change-in-production
      - PORT=8080  # Cloud Run default
    volumes:
      - ./uploads:/app/uploads
      - ./client_secret.json:/app/client_secret.json:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/test-config"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    profiles:
      - production  # Only run when explicitly specified

  # Optional: Add a database service if needed in the future
  # db:
  #   image: postgres:13
  #   environment:
  #     POSTGRES_DB: flask_app
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: password
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"

# volumes:
#   postgres_data: